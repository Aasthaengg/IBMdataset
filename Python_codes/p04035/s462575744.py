#!/usr/bin/env python3
import sys

YES = "Possible"  # type: str
NO = "Impossible"  # type: str

def solve(N: int, L: int, a: "List[int]"):
    pair_length = [a[i] + a[i+1] for i in range(N-1)]
    longest_pair = max(pair_length)
    
    if longest_pair < L:
        print(NO)
        return
    
    print(YES)
    last_knot = pair_length.index(longest_pair)
    for i in range(last_knot):
        print(i+1)
    for i in range(N-2, last_knot-1, -1):
        print(i+1)
    return


# Generated by 1.1.4 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    L = int(next(tokens))  # type: int
    a = [ int(next(tokens)) for _ in range(N) ]  # type: "List[int]"
    solve(N, L, a)

if __name__ == '__main__':
    main()
