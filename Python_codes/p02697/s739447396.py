#!/usr/bin/env python3
import sys


def check(N, M, ans):
    p = list(range(1, N+1))
    s = set()
    for _ in range(N):
        for a, b in ans:
            s.add((min(p.index(a), p.index(b)), max(p.index(a), p.index(b))))
        p = [p[-1]] + p[:-1]
    assert len(s) == N * M


def solve(N: int, M: int):
    ans = []
    i, j = 0, N + 1
    diffs = set()
    for _ in range(M):
        i += 1
        j -= 1
        while j - i == i + N - j or j - i in diffs or i + N - j in diffs:
            j -= 1
        diffs.add(j - i)
        diffs.add(i + N - j)
        ans.append((i, j))
    for a, b in ans:
        print(a, b)
    # check(N, M, ans)


# Generated by 1.1.6 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    M = int(next(tokens))  # type: int
    solve(N, M)

if __name__ == '__main__':
    main()
