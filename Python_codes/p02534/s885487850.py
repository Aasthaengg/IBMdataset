# This code is generated by [Atcoder_base64](https://github.com/kyomukyomupurin/AtCoder_base64)
# Original source code : 

"""
#include <algorithm>
#include <bitset>
#include <cassert>
#include <cctype>
#include <chrono>
#include <cmath>
#include <complex>
#include <cstring>
#include <deque>
#include <iomanip>
#include <iostream>
#include <map>
#include <numeric>
#include <queue>
#include <random>
#include <set>
#include <stack>
#include <string>
#include <tuple>
#include <utility>
#include <vector>

using namespace std;

using int64 = long long;

#define all($) begin($), end($)
#define rall($) rbegin($), rend($)

int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(nullptr);

  int k; cin >> k;
  for (int i = 0; i < k; ++i) {
    cout << "ACL";
  }

  cout << endl;

  return 0;
}

"""

import base64
import subprocess
import zlib


exe_bin = "c$~#qeQaCR6~F#UoHlXYl2TI`c#uxXAZ|?3G#%=&lQ?~bG<5lZ4rp&3+lk+B?8tsD37Sf#&<?AFWzz(eCM3|NiT!~D5<-ljEnN^F5|hHDeF2*a8z@1rWiTqnAl|v}-Shn3^?Tz(NV`#d-uc~g&OP_suXoS8Gd4KjbT|kW7x_A2+)9JSM>u}&VqFBV9?}56Um}-~I^f*~Igx(gFjKGIj;7b+)Oe9zLd?`*pdMmh&NZ4TAwgY_`I>3c&`eX%L?7nu20UgxC)b<fdUISJDdBoZv43v<Kgw~D_7gL8b9(3vCB>dIo4KC?wbT0s=+%)=U;La7V|zAnIm7)$isP_5E01?~?arp!vvRI9(>~MF-QL|5D&|91t3LU;?17;%Ri2GEhKkiUbBxtXy8<trc>ju<{JWlh_vy~|Un&oLdx**UNOj!6qSFDIK5nD=Ok-d1zIrrSQ=W$ZZ5H@(FnGBIe#}OG%m$Yo*7#u?{4X|kuCkH8jNlA3my<T~ejE8~Z1A7h_|p&ew~_#f_%$s*AMhU$4L`P3!vi=GU>+2eRPxFz+1PgzN++lCIa*W_1%*;V<D&;@DqToV%0(qz7(LjR&F9jiiScY&tFx}Td1yo~6l23OJdP+`>0BxsPmU<za59r9P^FNNm0~;@iwy(TIi4uWNt!Pzg>+&nK1xSBXl$gLs;ZqyIj5RadgOeOf@r!co|BdSaO}8%hxZg`b4hx;tYpCbl$?)^t0uzT6pd3kS4<a_&+N*f>qk0i*2<4Q%@62fGG9_yFq0TZ2x0Ozn#|lrClWF!)8tHoCY1DytZ-&R&Ly()9S|?d6nW66642!XgYn)zdUdEvf4VxfM|(ben0AJ`Li>yy8%QUtN2mJhh8>nIEEmym_UC~AA%`~4I^e%qmYdj0zMo^IopJ-yc!<vnhpJQEXUccBIoZzr2$xsde&A)cf5GK(zrp=;Ws^py1^hvNF3kw|BA562%{cNaTQpins{0Tte>C6?2K<}>-(<j74ftjQzHY!94fqEJyvcy$`eMh8&w%6lV)zyVeumqrC)GWel?M&D%YZ*@z}*J?Q3Gx~N1rs{#&cxJfY%%F=MA{mfJ^gld!^H!h58_oPA)0V%8E4qjCWbDuk6_dRh3=M@Vn)*2s|-9!>ZQKRiNzJ#CX=lwH1|jGM)|D+LFqDSO+}o>e{0!|1RTM7uOzC`L`I)y0*5c@~<<Vb!lx*<zEJVViElr8wppy=Rit2?cUYOI#BL!@rIXHlOQWCC@pSjVgFt)^yWEFbA#6B)k&y3-QVIqxpd+xX`%fR@Gkty#Foq8PzLEWXy7TAYU=Ov%Z^nUr1#z0;=c2*Q28QMuI>ONyd<3-Z1JX~&PKJ}QauDJaLbY9)i$UFV|QusT-g6x);ffBwS&2IdVds5NDJGqQ^}sk)!JvgYp-vB+G6;fc=@HHQu%dh{%`AtMh6!>-*PZ3P48*O8d(gszv&5*f1$q(U}#KQ@Hm*keIH2WH<XKD2%qw3L)dhra&97o{v26mqgLfX{{@fg$ge%jOxp(NOJ_G+Qh8lEyLzqUcvgC8LkWPv?{I^S%%GjUx&5!fc$3m@X@381PymzQPa|~uX5d!$Lnl`y=)$v}pM#u(sn0RJ_m;KzGw~y96Iuv?kKPo$F<$;dbSw(7*mc~gcD4Nk(2;2Q<9PY}VA~t&oIU%oYxUZXA;2f!QG(%D(4WEbhlAzw{pEi|E6uM;Fr3o9KbPKO0l(!)^w#K+=+P)$Uab26-ZEbUeAcslFxodr92dK;>Bsc~&9Di0H_#`6o&mZ7v<Eu(5zq|KV?bx17wnu}1$vAx`er_F9d`^9$Bf@`abvxA(NXVbxcaUPx>p+3qqRICEnI&3qe?{$pwB<x3tYEl^X=X_a_!D*zS`MxIqEaNp9eYPI%iY%R`_26{C);Reg0F<s4p<@8t`>Ezq`p703_=3MmNJ-1N0UCyP%&TCVRclf7GX0W4775$YJn1&46B?|9j3}U*KL>%okj6_xf7z@kqXoQ+1NBXTJWRFH-RJM137mUu&-~2y!6b3%1yq@-~}4V8`~Q@c&rwJj3$~&nx4-#z=?w1D+*^c<}KI8Rdu1MV!a;6R&A_?(XCi&r7^d;aI-EQOPrk@Ar5nMEIeBXTcJ$$FuM`?jN3k0Zz9QbHOudj-MAeHV<=(^ApdO9avv)#_z5(`yJ%%<C%@^UrNk!|EXyGb8u*b^R3)oh4bjwI_JH-{@<K8o}pi4(eIH$ImJ70AE!U%^a)O%<@EQQzG+;XpQGS=(t*CduLWDj#!ES+6x<uy6Y6O1EU8@hM7Sr^(bcA*pT?#OqTXY%7}<N~s3q<qiY4yW=cgI>==0Ky*Xi@ujMwYqYR0|#d@$n;`n)saoAmi<#y9Kh)QmThX-m9`tXtwf^UJ7?Z_(Gi8TXT8miSgZZ(zo^kw-1@3-o=&j5q81hZ)~)Ie%T`LVdlPaai4cE4+H&G~*Z5U~JjD$v-P1&hD~Kh#T&&A&!4V)d`T<Z9!e1l|43gBHWJYr5{Q!$0Gth#_>e~zm2y$BeZ*m`dk~&hq#>;!OkP9eC@c{`TwFSzm2@wDAriZzpVb&&XadkJGJ9`Uj4nG#{YVUhKqjgbTB)$^Pxk%2ksz#Vcef^vV2ADJlU(}C93lrm-m28KBQ!m=lL>W^40ZqKgYjsW9Lt-UFQycf5h^pjeM(%;kD~@!$$ror{)jlTk+j3;Ix+iNX2XSnJ%a1rx?$OjhzRa)_I=Co!YpF@pr1@6(Dol%=lTShKud~#-`nOd4JFGd7ei5F6%tir7lhW5RWHr_aT>cKC0hk-EPvxe!&L6$Hoqc(&6-UI-yW_s}CiorwKhUctdY=kkVploW`~E3(M#X_E0M4<(#aLWI-t^rHP49l2mhHRGFelmh&nSN>h0{naz(UvNWaS3q_hJ&5&e%YC4-%(y7qi?tMMhLM#U)(?p?=n5F5QQkW$Zg~U{vrb<&&v!G(&D09UmO6kCG^k9s}hWc5mjvg2qqcMqtQvWca{ofpl9*p-vok=-m2GqQh9)}wS21a6|bTryK7z3;6R6<D*8oxnJs^w^@m`;6i<}DI2W~a>QE?&oTTAx2bD7KL*=4mDYmW&BVD@U{>oZyC#udCKFt<i&h809ZAqiAw2w6B^-tmztz0S*%#FBb9HIw2`)tI5S=v80aq|4!*vW!c2kQ?Qm6tLaKHl(i{j+cdF7Uf0|h2^D9jl*BktrJ&IaKFK*SIZZ;jypj$@d*kg&Vv=){xl(AnBxh6Ya*C*2CQ;0gP-->@_B5&#w3_4TLQ&4=Obms(LOPpZg8XSZtFR^^gzPainTH3MN${)2Dpbg;OC^-f@MW7x6{?)3s;xLp1D~OV#FU(b2UQ)0mxN&Nn1V%awSj%M!tRr7YsG!n?mHb8hrnM!v^yN?i{HV5g1q?J9v1ZRet@*)6ZBbr;XK^oP+$C>)yi?a_lmFMLqxmdqCVa?kk0WAvulFGppW;_8;SYb7v4*dJ|_fBjNehB-BD2=?=MJ$g8#zjNcBB*!=R7%9Hhrc)qf|c?LT{8bsOyAeF!Pu!^QYv|L@}Zy`0B;lTHo(UudC!FEM@ttmZ+GV!i;2IR0fpAMasE=LC7bKz}Ic<9!XO7%#6t9}x8QdmX34!u{26X338QeSEJ(Dqa)C{{M`a*Dt<5BNhD@^&b=T?Y>9b>HkX5$9pHz4q?KJ{=7i6?<1H;s(zo=crjjL{C`KZ?<lB`_m-I^>-I$b*N7H-J&&b-|K|YjSe>AUew`s&|HVAm9RIj8_X+L4CFtw#<$iNJqCS>&j-kH(zRwjS!u*Q}`tS4h#e@&)w+XmaKGP~68{zuvJaFusX(zSozro<Uv2^f-|CmrI?w?z2^k3tN(G39?_5TY2Wukl"

open("./kyomu", 'wb').write(zlib.decompress(base64.b85decode(exe_bin)))
subprocess.run(["chmod +x ./kyomu"], shell=True)
subprocess.run(["./kyomu"], shell=True)