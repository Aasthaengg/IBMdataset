#!/usr/bin/env python3
import sys


def solve(N: int, D: int, X: int, A: "List[int]"):
    chocolates = []
    for a in A:
        chocolates.append(search(D, a))
    print(sum(chocolates) + X)
    return


def search(day: int, ai: int):
    ans = 0
    for i in range(day):
        if i * ai + 1 <= day:
            ans += 1
    return ans


# Generated by 1.1.7.1 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word

    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    D = int(next(tokens))  # type: int
    X = int(next(tokens))  # type: int
    A = [int(next(tokens)) for _ in range(N)]  # type: "List[int]"
    solve(N, D, X, A)


if __name__ == "__main__":
    main()
