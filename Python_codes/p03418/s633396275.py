'''
全体からKよりも小さくなる組を引く
(1~N)%iのあまりについて考える。(iは固定)
0<=i<=Kの時、あまりは必ずK-1以下になる(2で割ると余りは[0,1]、3で割ると余りは[0,1,2]、....、Kで割ると余りは[0,1,..,K-1])
i>Kの時、
まず、(1~i)%iについて考える
    ①(1~K-1)%iの余りはK-1以下、個数は(K-1)個     (例:i=K+5の時、1%(K+5)=1、2%(K+5)=2、......、(K-1)%(K+5)=K-1)
    ②(K~i-1)%iの余りはK以上、個数は(i-K)個    (例：i=K+5の時、(K)%(K+5)=K、(K+1)%(K+5)=K+1、.....、(K+4)%(K+5)=K+4)
    ③i%iの余りは0、個数は1個      (例:i=K+5の時、(K+5)%(K+5)=0)

    全部合わせてi個
    このうち、余りがKよりも小さくなるのはK個

では、(i+1~N)%iも上と同様に考える(余りは周期的に繰り返される)と、(N//K)回繰り返されるので、(N//i)*K
あとは余りのところを考えて、min(K-1,N%i)   (maxの部分はK=0対策)
i>Kにおいてはこの和をansから引けば良い。
'''

N,K=map(int,input().split())
ans=N**2
for i in range(1,N+1):
    if i<=K:
        ans-=N
    else:
        ans-=((N//i)*K + max(min(K-1,N%i),0))
print(ans)