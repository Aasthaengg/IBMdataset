#!/usr/bin/env python3
import sys

MOD = 1000000007  # type: int


def solve(L: str):
    dp = [(0,0)] * (len(L)+1)
    dp[0] = (1,0)
    for i in range(1,len(L)+1):
        isOne = L[i-1] == "1"
        if isOne:
            mContinue = dp[i-1][0]*2%MOD
            mDiscontinue = (dp[i-1][0] + dp[i-1][1]*3)%MOD
            dp[i] = (mContinue,mDiscontinue)
        else:
            mContinue = dp[i-1][0]%MOD
            mDiscontinue = (dp[i-1][1]*3)%MOD
            dp[i] = (mContinue,mDiscontinue)
    print((dp[len(L)][0]+dp[len(L)][1])%MOD)

    return


# Generated by 1.1.6 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    L = next(tokens)  # type: int
    solve(L)

if __name__ == '__main__':
    main()
