#!/usr/bin/env python3
import sys

MOD = 1000000007  # type: int

def solve(S: str):
    current = [0, 0, 0]
    power = 1
    for c in S:
        if c == 'A':
            current[0] = (current[0] + power) % MOD
        elif c == 'B':
            current[1] = (current[1] + current[0]) % MOD
        elif c == 'C':
            current[2] = (current[2] + current[1]) % MOD
        else:
            current[2] = (3 * current[2] + current[1]) % MOD
            current[1] = (3 * current[1] + current[0]) % MOD
            current[0] = (3 * current[0] + power) % MOD
            power = power * 3 % MOD
    print(current[2])
    return


# Generated by 1.1.4 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    S = next(tokens)  # type: str
    solve(S)

if __name__ == '__main__':
    main()
