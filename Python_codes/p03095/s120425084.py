


"""
愚直に考えると、
各文字について、部分列に入れるか入れないか判断し、できた部分列について重複がないか判定する。
部分列作成部分だけで2^Nかかるので、到底間に合わない。

同一の部分列であっても、切り出した位置が異なれば違うものとして扱うので、例えばaaabがあったとき、a__b, _a_b, __abはいずれもabだが、それぞれカウントする。
なので上の例のabについては、（aの個数）x（bの個数）という計算になる。
こんな感じで考えると、それぞれの文字について、
・文字XXXを部分列にいれるか入れないか
・入れるのであれば、どの位置のXXXをぶぶんれつにいれるか
の 個数＋１の選択肢があるから、これの累積積をMODの世界でとっていけばよい

いずれの文字についても選ばない場合（部分列が空文字になる）も存在するので、その分は除く
"""


N = int(input())
S = input()
MOD = 10**9 + 7
from collections import Counter
c = Counter(S)
ans = 1

for v in c.values():
    ans *= (v+1)
    ans %= MOD

print(ans-1)