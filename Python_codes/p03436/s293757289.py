#!/usr/bin/env python3


def solve(H, W, s):
    from heapq import heappop, heappush
    blacks = sum(sum(e == "#" for e in ss) for ss in s)
    hq = [(1, (0, 0))]
    visited = set()
    while hq:
        c, h_w = heappop(hq)
        h, w = h_w
        if h_w in visited:
            continue
        if h_w == (H-1, W-1):
            return H * W - blacks - c
        visited.add(h_w)
        for dh, dw in zip((0, 0, 1, -1), (1, -1, 0, 0)):
            nh, nw = nh_nw = h + dh, w + dw
            if not(0 <= nh < H and 0 <= nw < W):
                continue
            if nh_nw in visited:
                continue
            if s[nh][nw] == "#":
                continue
            heappush(hq, (c+1, nh_nw))
    return -1

# Generated by 1.1.7.1 https://github.com/kyuridenamida/atcoder-tools
def main():
    H, W = map(int, input().split())
    s = [input() for _ in range(H)]
    print(solve(H, W, s))

def test():
    import doctest
    doctest.testmod()

if __name__ == '__main__':
    #test()
    main()
