''' This is AOJ Practice. '''


class Dice:
    ''' Dice
    6??¢????????????????????¨??????????????§??????
    NWSE?????????????????????????????¨????????\?????????
    ?????????Top??????????????????????????¢??????????????????????????¨????????\?????????
    '''

    def __init__(self):
        ''' ????????????????????? '''
        self.axis1 = list()
        self.axis2 = list()
        self.init()

    def control_n(self):
        ''' ????????¢?????? '''
        bottom_value = self.axis2[3]
        top_value = self.axis2[1]
        self.axis2 = [bottom_value, self.axis2[0], top_value, self.axis2[2], bottom_value]
        self.axis1 = [bottom_value, self.axis1[1], top_value, self.axis1[3], bottom_value]

    def control_w(self):
        ''' ????????¢?????? '''
        bottom_value = self.axis1[1]
        top_value = self.axis1[3]
        self.axis2 = [bottom_value, self.axis2[1], top_value, self.axis2[3], bottom_value]
        self.axis1 = [bottom_value, self.axis1[2], top_value, self.axis1[4], bottom_value]

    def control_s(self):
        ''' ????????¢?????? '''
        bottom_value = self.axis2[1]
        top_value = self.axis2[3]
        self.axis2 = [bottom_value, self.axis2[2], top_value, self.axis2[4], bottom_value]
        self.axis1 = [bottom_value, self.axis1[1], top_value, self.axis1[3], bottom_value]

    def control_e(self):
        ''' ????????¢?????? '''
        bottom_value = self.axis1[3]
        top_value = self.axis1[1]
        self.axis2 = [bottom_value, self.axis2[1], top_value, self.axis2[3], bottom_value]
        self.axis1 = [bottom_value, self.axis1[0], top_value, self.axis1[2], bottom_value]

    def top(self):
        ''' ????????¢??????????????? '''
        return self.axis1[2]

    def control(self, word):
        ''' ?????????????????????
        Args
            word    ????????????
                N   ????????¢??????
                W   ????????¢??????
                S   ????????¢??????
                E   ????????¢??????
        '''
        if word == 'N':
            self.control_n()
        elif word == 'W':
            self.control_w()
        elif word == 'S':
            self.control_s()
        elif word == 'E':
            self.control_e()
        else:
            Exception()

    def show(self):
        ''' ?????¨?????±????¨???????????????? '''
        print(self.axis1)
        print(self.axis2)

    def init(self):
        ''' ??????????????? '''
        self.axis1 = [6, 4, 1, 3, 6]
        self.axis2 = [6, 2, 1, 5, 6]

if __name__ == '__main__':
    input_value = input()
    control_value = input()
    dice = Dice()

    for word in list(control_value):
        dice.control(word)

    print(input_value.split(" ")[dice.top()-1])