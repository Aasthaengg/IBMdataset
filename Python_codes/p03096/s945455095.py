# dp[i]
# ある石が初めて出てくるときは、場合の数は増えない
# 1 2  -> ここまでは1通り
# 1 2 3 -> 3が初めて出てきたので、1通りのまま
# 1 2 3 2 -> 2は二度目に出てきたので1,2,3までの場合の数1と、2が最後に出た場合の数1を足す
# dpは[1,1,1,2]となる
# 1 2 3 2 2 -> 前回と同じ文字が出てきたときはパターンが増えない（そこで切れない）
# dpは[1,1,1,2,2]
# 1 2 3 2 2 3 -> 3は二度目に出てきたので、1,2,3,2,2までの場合の数2と、3が最後に出た場合の数1を足す
# dpは[1,1,1,2,2,3]
# dpの他に、「ある数が最後に出てきたときのindex」を管理する

N = int(input())
C = [None] * N
for i in range(N):
  C[i] = int(input())

DIV = 10 ** 9 + 7

dp = [0 for i in range(N)]
dp[0] = 1
index = [-1] * (max(C)+1) # ある数が最後に出てきたindex
index[C[0]] = 0 # ループを1から回すので、最初の数だけ「最後に登場したindexは0」を代入

for i in range(1,len(C)):
  if C[i] == C[i-1]:
    dp[i] = dp[i-1] # 直前と同じ文字のときはパターンが増えない
  elif index[C[i]] == -1:
    # 初めて出てきた文字のときは場合の数が増えない
    dp[i] = dp[i-1]
  else:
    # 二回目以降に出てきた場合、場合の数を足す
    dp[i] = ( dp[i-1] + dp[index[C[i]]] ) % DIV
  # 最後に出てきたindexを更新する
  index[C[i]] = i

print(dp[-1])