#!/usr/bin/env python3
import sys


def solve(N: int, P: "List[int]"):
    sorted_lis = sorted([(n, i) for i, n in enumerate(P)])
    max_con = 1
    con_cnt = 0
    pre_idx = N
    for _, i in sorted_lis:
        if i > pre_idx:
            con_cnt += 1
        else:
            max_con = max(max_con, con_cnt)
            con_cnt = 1
        pre_idx = i
    max_con = max(max_con, con_cnt)
    print(N - max_con)
    return


# Generated by 1.1.6 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    P = [int(next(tokens)) for _ in range(N)]  # type: "List[int]"
    solve(N, P)

if __name__ == '__main__':
    main()
