#!/usr/bin/env python3
import sys
from itertools import accumulate

def rightTrip(x,v,N,C)->int:
    accum_v = list(accumulate(v))
    ## スタート位置から左回りの距離
    left_v = v[::-1]
    left_accum_v = list(accumulate(left_v))

    ## v - 2x
    rightRoundTrip = [accum_v[i]-2*x[i] for i in range(N)]
    """
    右行って左
    """
    dp_left = [0]*(N)
    dp_left[0] = left_v[0] - (C-x[N-1])
    ## dp_left[i] = 左i番目までの最大
    for i in range(1,N):
        dp_left[i] = max(left_accum_v[i]-(C-x[N-i-1]),dp_left[i-1])
    
    answer = 0
    # rightがjまで行ったとき左からはN-2-jまでいける

    for i in range(0,N-1):
        r = rightRoundTrip[i]
        l = dp_left[N-2-i]
        answer = max(r+l,answer)
    
    """
    右行って退店
    """
    rightTrip = [accum_v[i]-x[i] for i in range(N)]
    answer = max(answer,max(rightTrip))
    return answer

def solve(N: int, C: int, x: "List[int]", v: "List[int]"):
    ## 右行って左→どこまで右行くのがいいか全探索
    ## 右行って退店
    ## 左行って右
    ## 左行って退店
    left_v = v[::-1]
    left_x = [C-x[i] for i in range(N-1,-1,-1)]
    print(max(rightTrip(x,v,N,C),rightTrip(left_x,left_v,N,C)))
    return


# Generated by 1.1.6 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    C = int(next(tokens))  # type: int
    x = [int()] * (N)  # type: "List[int]"
    v = [int()] * (N)  # type: "List[int]"
    for i in range(N):
        x[i] = int(next(tokens))
        v[i] = int(next(tokens))
    solve(N, C, x, v)

if __name__ == '__main__':
    main()
