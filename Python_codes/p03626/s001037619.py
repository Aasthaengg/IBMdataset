#!/usr/bin/env python3
import sys

MOD = 1000000007  # type: int


def solve(N: int, S: "List[str]"):
    S1, S2 = S
    prev = 0
    counter = 1
    i = 0
    while i<N:
        if S1[i] == S2[i]:
            if prev == 0:
                counter *= 3
            elif prev == 1:
                counter *= 2
            prev = 1
            i += 1
        else:
            if i > 0:
                if S1[i-1] == S1[i] and S2[i-1] == S2[i-1]:
                    i += 1
                    prev = 2
                    continue
            if prev == 0:
                counter *= 6
            elif prev == 1:
                counter *= 2
            elif prev == 2:
                counter *= 3
            prev = 2
            i += 1
        counter %= MOD
    print(counter)
    return


# Generated by 1.1.5 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    S = [next(tokens) for _ in range(2)]  # type: "List[str]"
    solve(N, S)

if __name__ == '__main__':
    main()
