#!/usr/bin/env python3
# Generated by https://github.com/kyuridenamida/atcoder-tools
from typing import *
import collections
import functools as fts
import itertools as its
import math
import sys

INF = float('inf')


def solve(X: int, K: int, D: int):
    return abs(X) - K * D if abs(X) > K * D else X % D if (K - X//D) % 2 == 0 else abs(X % D - D)


def main():

    sys.setrecursionlimit(10 ** 6)

    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    X = int(next(tokens))  # type: int
    K = int(next(tokens))  # type: int
    D = int(next(tokens))  # type: int
    print(f'{solve(X, K, D)}')


if __name__ == '__main__':
    main()
