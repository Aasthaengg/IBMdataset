#!/usr/bin/env python3
import sys
import numpy as np
from itertools import combinations


def solve(N: int, K: int):
    if K > (N-1) * (N-2) // 2:
        print(-1)
        return
    print(N-1 + ((N-1) * (N-2) // 2 - K))
    for n in range(2, N+1):
        print(1, n)
    count = 0
    for c in combinations(range(2, N+1), 2):
        if (N-1) * (N-2) // 2 - K == count:
            return
        count += 1
        print(c[0], c[1])
    return


# Generated by 1.1.7.1 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    K = int(next(tokens))  # type: int
    solve(N, K)

if __name__ == '__main__':
    main()
