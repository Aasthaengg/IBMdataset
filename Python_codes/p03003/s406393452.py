# compiled by pythran
"""
#pythran export main2()
import numpy as np

def calc(S, T, a):
    MOD = 10 ** 9 + 7
    for i in range(1, a.shape[0]):
        for j in range(1, a.shape[1]):
            a[i, j] = (a[i - 1, j] + a[i, j - 1] -
                       (a[i - 1, j - 1] if S[i - 1] != T[j - 1] else 0)) % MOD


def main2():
    stdin = open('/dev/stdin')
    stdin.readline()
    S = np.fromstring(stdin.readline(), np.uint32, -1, ' ')
    T = np.fromstring(stdin.readline(), np.uint32, -1, ' ')
    a = np.ones((len(S) + 1, len(T) + 1), dtype=np.uint32)
    calc(S, T, a)
    print(a[len(S), len(T)])
"""
import os, sys

p = os.path.dirname(__file__)
pymain = os.path.join(p, "a.out")
if len(sys.argv) == 1:
    import subprocess
    if p == "":
        pymain = "./" + pymain
    subprocess.call(pymain)
else:
    import gzip, base64, stat
    gz = b''
    bin = gzip.decompress(base64.b64decode(gz))

    with open(pymain, "wb") as f:
        f.write(bin)
    os.chmod(pymain, stat.S_IRUSR | stat.S_IWUSR | stat.S_IXUSR)
