#!/usr/bin/env python3
import sys


def solve(N: int, A: "List[int]"):
    minus = {}
    plus = {}
    i = 0
    for n in A:
        i += 1
        if -n - i in plus:
            plus[-n - i] += 1
        else:
            plus[-n - i] = 1
        if n - i in minus:
            minus[n - i] += 1
        else:
            minus[n - i] = 1

    count = 0
    for p in plus:
        if p in minus:
            count += plus[p] * minus[p]
    print(count)

    return


# Generated by 1.1.7.1 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    A = [int(next(tokens)) for _ in range(N)]  # type: "List[int]"
    solve(N, A)

if __name__ == '__main__':
    main()
