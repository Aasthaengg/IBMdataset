#!/usr/bin/env python3
# Generated by https://github.com/kyuridenamida/atcoder-tools
from typing import *
import itertools
import math
import sys

INF = float('inf')


def law_of_cosines(a: float, b: float, gamma: float, is_degree: bool = False) -> float:
    if is_degree:
        gamma = math.radians(gamma)
    return a**2 + b**2 - 2*a*b*math.cos(gamma)


def solve(A: int, B: int, H: int, M: int):
    deg = (H + M/60) * 30 - M * 6
    return math.sqrt(law_of_cosines(A, B, deg, is_degree=True))


def main():

    sys.setrecursionlimit(10 ** 6)

    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    A = int(next(tokens))  # type: int
    B = int(next(tokens))  # type: int
    H = int(next(tokens))  # type: int
    M = int(next(tokens))  # type: int
    print(f'{solve(A, B, H, M):.10f}')


if __name__ == '__main__':
    main()
