#!/usr/bin/env python3
import sys


def solve(N: int, K: int, a: "List[int]"):

    dp = [False] * (K + 1)
    for i in range(0, K + 1):
        for j in a:
            if i - j >= 0:
                dp[i] = not dp[i - j] or dp[i]

    print("First" if dp[K] else "Second")

    return


# Generated by 1.1.6 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    K = int(next(tokens))  # type: int
    a = [int(next(tokens)) for _ in range(N)]  # type: "List[int]"
    solve(N, K, a)

if __name__ == '__main__':
    main()
